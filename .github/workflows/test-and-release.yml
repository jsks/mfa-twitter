name: CI/CD
on:
  push:
  schedule:
    - cron: '44 3 11 * *'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        racket-version: [ 'stable', 'current' ]
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: test
          POSTGRES_DATABASE: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    name: Racket ${{ matrix.racket-version }}
    steps:
      - name: Check out repository
        uses: actions/checkout@master
      - name: Setup Racket
        uses: Bogdanp/setup-racket@v0.13
        with:
          architecture: x64
          version: ${{ matrix.racket-version }}
          packages: 'threading'
      - name: Install zsh
        run: sudo apt-get install zsh
      - name: Setup postgres
        run: zsh scripts/bootstrap.sh --testing -u test -W postgres
      - name: Run tests
        run: raco test --submodule integration test

  release:
    needs: test
    if: github.ref == 'refs/heads/production'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set tag name
        id: set_tag
        run: echo "::set-output name=tag_name::$(echo $(date +'%Y-%m-%d')-$(head -c 6 <<< ${{ github.sha }}))"

      - name: Install make
        run: sudo apt-get install make

      - name: Inject configuration variables
        run: |
          sed -i -e '/^pg_database/s/".*"/"${{ secrets.PG_DATABASE }}"/' \
                 -e '/^pg_user/s/".*"/"${{ secrets.PG_USER }}"/' \
                 -e '/^pg_socket/s/".*"/"${{ secrets.PG_SOCKET }}"/' .env

      - name: Build release tarball
        run: make version=${{ steps.set_tag.outputs.tag_name }} build

      - name: Create a new release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          tag_name: ${{ steps.set_tag.outputs.tag_name }}
          files: mfa-${{ steps.set_tag.outputs.tag_name }}.tar.zst

      - name: Publish release
        uses: actions/github-script@v4
        with:
          script: |
            github.repos.updateRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: ${{ steps.create_release.outputs.id }},
                draft: false
            })
